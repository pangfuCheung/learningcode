作业：实现多级代理，重现谚语，螳螂扑蝉黄雀在后

实现思路：
    1.分析螳螂、蝉和黄雀都有共同的行为，那就是狩猎的行为，因此我们可以创建一个接口定义一个狩猎的方法，然后监控这一行为
    2.创建一个接受监控的接口类 Dongwu，分别创建 螳螂、蝉和黄雀的实现类，Tanglang、Chan和Huangque这三个实现类去实现狩猎方法
    3.利用动态代理设计模式，去监听螳螂的狩猎行为；业务：一单螳螂狩猎了蝉，则螳螂会被黄雀狩猎，所以在代理实现类中，监听螳螂的行为，
      判断条件：Dongwu实现类执行的方法为eating和该类名为Tanglang时，则在执行该方法前先执行蝉的eating方法，然后执行螳螂的eating
      方法，最后执行黄雀的eating方法。
    4.创建一个代理实现类Agent
    5.创建一个代理工厂类，作用是获取被监听接口的实现类
    6.在Agent中实现代码

代理模式：
    1.解决的问题：解决【主要业务】和【次要业务】的耦合问题

    2.本质：行为的监听
        举例子：<input type="button" onclick="fun1">
        说明：onclick就是监听对象 fun1就是被监听对象的实现类方法

    3.组成：
        1）接口：声明需要被监听的行为

        2）代理实现类：一个实现了InvocationHandler方法的类，它相当于input的fun1

        3）代理对象：一个监听对象，它相当于input的onclick


